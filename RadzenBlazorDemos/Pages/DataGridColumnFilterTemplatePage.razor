@page "/datagrid-filter-template"

@using System.Linq.Dynamic.Core

<h1>DataGrid custom Column FilterTemplate</h1>

<p>This page demonstrates how to define custom DataGrid column filter template.</p>

<RadzenExample Name="DataGrid" Source="DataGridColumnFilterTemplate" Heading="false">
    @if (employees == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <RadzenDataGrid @ref="grid" Data=@filteredEmployees Count="@itemCount" FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="Employee" LoadData="@OnLoadData" ColumnWidth="150px">
            <Columns>
                <RadzenDataGridColumn TItem="Employee" Property="ID" Title="ID" />
                <RadzenDataGridColumn TItem="Employee" Property="CompanyName" Title="Customer" FilterValue="@CompanyNameFilter" FilterOperator="FilterOperator.Equals" LogicalFilterOperator="LogicalFilterOperator.Or">
                    <FilterTemplate>
                        <RadzenDropDown @bind-Value=@CompanyNameFilter Change=@(args => OnLoadDataMultiselect(args, 1)) Data="@(CompanyNames)" AllowClear="true" Multiple="true" />
                    </FilterTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Employee" Property="Name" Title="Name" />
                <RadzenDataGridColumn TItem="Employee" Property="TitleOfCourtesy" Title="Title Of Courtesy" 
                    FilterValue="@currentTOC">
                    <FilterTemplate>
                        <RadzenDropDown @bind-Value="@currentTOC" TextProperty="Text" ValueProperty="Value" Style="width:100%"
                                        Change=@OnChange
                                        Data="@(Enum.GetValues(typeof(TitleOfCourtesy)).Cast<TitleOfCourtesy?>().Select(t => new { Text = $"{t}", Value = t == TitleOfCourtesy.All ? null : t }))" />

                    </FilterTemplate>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
</RadzenExample>

@code {
    RadzenDataGrid<Employee> grid;
    TitleOfCourtesy? currentTOC;

    public enum TitleOfCourtesy
    {
        Ms,
        Mr,
        All = -1
    }

    public IEnumerable<string> CompanyNameFilter { get; set; }
    public List<string> CompanyNames = new List<string> {"Vins et alcools Chevalier", "Toms Spezialitäten", "Hanari Carnes", "Richter Supermarkt", "Wellington Importadora", "Centro comercial Moctezuma" };

    public class Employee
    {
        public int ID { get; set; }
        public string CompanyName{ get; set; }
        public string Name { get; set; }
        public TitleOfCourtesy TitleOfCourtesy { get; set; }
    }

    protected async Task OnLoadData(LoadDataArgs args)
    {
        filteredEmployees =String.IsNullOrWhiteSpace(args.Filter) ? employees.ToList() : employees.Where(args.Filter).ToList();
        itemCount = filteredEmployees.Count();
    }

    protected async Task OnLoadDataMultiselect(object value, int columnIndex)
    {
        //Have to force a SetParameters call otherwise the multi-select doesn't get it's parameters set until after the reload
        var parameterDictionary = new Dictionary<string, object>();
        parameterDictionary.Add("FilterValue", value);
        ParameterView view = ParameterView.FromDictionary(parameterDictionary);
        await grid.ColumnsCollection[columnIndex].SetParametersAsync(view);

        await grid.Reload();
    }

    async Task OnChange()
    {
        if (currentTOC == TitleOfCourtesy.All)
        {
            currentTOC = null;
        }

        await grid.Reload();
    }

    IQueryable<Employee> employees; 
    IEnumerable<Employee> filteredEmployees;
    int itemCount { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employees = await Task.FromResult(Enumerable.Range(0, 10).Select(i =>
            new Employee
            {
                ID = i,
                CompanyName = i < 4 ? CompanyNames[0] : CompanyNames[i - 4],
                Name = $"Name{i}",
                TitleOfCourtesy = i < 5 ? TitleOfCourtesy.Mr : TitleOfCourtesy.Ms
            }).AsQueryable());

        filteredEmployees = employees.ToList();
        itemCount = filteredEmployees.Count();
    }
}
