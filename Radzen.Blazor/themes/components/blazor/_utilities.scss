// Theme Colors

$rz-theme-colors-map: () !default;
$rz-theme-colors-map: map-merge(
  (
    "white": $rz-white,
    "black": $rz-black,
    
    "base-50": $rz-base-50,
    "base-100": $rz-base-100,
    "base-200": $rz-base-200,
    "base-300": $rz-base-300,
    "base-400": $rz-base-400,
    "base-500": $rz-base-500,
    "base-600": $rz-base-600,
    "base-700": $rz-base-700,
    "base-800": $rz-base-800,
    "base-900": $rz-base-900,
    
    "primary": $rz-primary,
    "primary-light": $rz-primary-light,
    "primary-lighter": $rz-primary-lighter,
    "primary-dark": $rz-primary-dark,
    "primary-darker": $rz-primary-darker,
    
    "secondary": $rz-secondary,
    "secondary-light": $rz-secondary-light,
    "secondary-lighter": $rz-secondary-lighter,
    "secondary-dark": $rz-secondary-dark,
    "secondary-darker": $rz-secondary-darker,
    
    "info": $rz-info,
    "info-light": $rz-info-light,
    "info-lighter": $rz-info-lighter,
    "info-dark": $rz-info-dark,
    "info-darker": $rz-info-darker,
    
    "success": $rz-success,
    "success-light": $rz-success-light,
    "success-lighter": $rz-success-lighter,
    "success-dark": $rz-success-dark,
    "success-darker": $rz-success-darker,
    
    "warning": $rz-warning,
    "warning-light": $rz-warning-light,
    "warning-lighter": $rz-warning-lighter,
    "warning-dark": $rz-warning-dark,
    "warning-darker": $rz-warning-darker,
    
    "danger": $rz-danger,
    "danger-light": $rz-danger-light,
    "danger-lighter": $rz-danger-lighter,
    "danger-dark": $rz-danger-dark,
    "danger-darker": $rz-danger-darker,
    
    "series-1": $rz-series-1,
    "series-2": $rz-series-2,
    "series-3": $rz-series-3,
    "series-4": $rz-series-4,
    "series-5": $rz-series-5,
    "series-6": $rz-series-6,
    "series-7": $rz-series-7,
    "series-8": $rz-series-8,
  ),
  $rz-theme-colors-map
);

// Theme Colors CSS variables
:root {
  @each $color, $value in $rz-theme-colors-map {
    --rz-#{$color}: #{$value};
  }
}

// Theme Constants

$rz-theme-constants-map: () !default;
$rz-theme-constants-map: map-merge(
  (
    "border-width": $rz-border-width,
    "root-font-size": $rz-root-font-size,
    "body-font-size": $rz-body-font-size,
    "body-line-height": $rz-body-line-height,
    "icon-size": $rz-icon-size,
  ),
  $rz-theme-constants-map
);

// Theme Constants CSS variables
:root {
  @each $token, $value in $rz-theme-constants-map {
    --rz-#{$token}: #{$value};
  }
}

// Semantic Text Color

$rz-text-title-color: var(--rz-base-900) !default;
$rz-text-color: var(--rz-base-800) !default;
$rz-text-secondary-color: var(--rz-base-700) !default;
$rz-text-tertiary-color: var(--rz-base-600) !default;
$rz-text-disabled-color: var(--rz-base-500) !default;
$rz-text-contrast-color: var(--rz-white) !default;

$rz-text-map: () !default;
$rz-text-map: map-merge(
  (
    "text-title-color": $rz-text-title-color,
    "text-color": $rz-text-color,
    "text-secondary-color": $rz-text-secondary-color,
    "text-tertiary-color": $rz-text-tertiary-color,
    "text-disabled-color": $rz-text-disabled-color,
    "text-contrast-color": $rz-text-contrast-color,
  ),
  $rz-text-map
);

// Semantic Text Color CSS variables
:root {
  @each $token, $value in $rz-text-map {
    --rz-#{$token}: #{$value};
  }
}

// Semantic Text Color CSS classes
@each $token, $value in $rz-text-map {
  .rz-#{$token} {
    color: #{$value} !important;
  }
}

// Link Color

$rz-link-color: var(--rz-secondary) !default;
$rz-link-text-decoration: none !default;
$rz-link-hover-color: var(--rz-secondary-dark) !default;
$rz-link-hover-text-decoration: underline !default;

$rz-link-map: () !default;
$rz-link-map: map-merge(
  (
    "link-color": $rz-link-color,
    "link-text-decoration": $rz-link-text-decoration,
    "link-hover-color": $rz-link-hover-color,
    "link-hover-text-decoration": $rz-link-hover-text-decoration,
  ),
  $rz-link-map
);

// Link Color CSS variables
:root {
  @each $token, $value in $rz-link-map {
    --rz-#{$token}: #{$value};
  }
}

// Background Color

$rz-base-background-color: var(--rz-white) !default;

:root {
  --rz-base-background-color: #{$rz-base-background-color};
}

// Border

$rz-border-50: var(--rz-border-width) solid var(--rz-base-50) !default;
$rz-border-100: var(--rz-border-width) solid var(--rz-base-100) !default;
$rz-border-200: var(--rz-border-width) solid var(--rz-base-200) !default;
$rz-border-300: var(--rz-border-width) solid var(--rz-base-300) !default;
$rz-border-400: var(--rz-border-width) solid var(--rz-base-400) !default;
$rz-border-500: var(--rz-border-width) solid var(--rz-base-500) !default;
$rz-border-600: var(--rz-border-width) solid var(--rz-base-600) !default;
$rz-border-700: var(--rz-border-width) solid var(--rz-base-700) !default;
$rz-border-800: var(--rz-border-width) solid var(--rz-base-800) !default;
$rz-border-900: var(--rz-border-width) solid var(--rz-base-900) !default;

$rz-border-white: var(--rz-border-width) solid var(--rz-white) !default;
$rz-border-black: var(--rz-border-width) solid var(--rz-black) !default;

$rz-border-primary: var(--rz-border-width) solid var(--rz-primary) !default;
$rz-border-primary-light: var(--rz-border-width) solid var(--rz-primary-light) !default;
$rz-border-primary-lighter: var(--rz-border-width) solid var(--rz-primary-lighter) !default;
$rz-border-primary-dark: var(--rz-border-width) solid var(--rz-primary-dark) !default;
$rz-border-primary-darker: var(--rz-border-width) solid var(--rz-primary-darker) !default;

$rz-border-secondary: var(--rz-border-width) solid var(--rz-secondary) !default;
$rz-border-secondary-light: var(--rz-border-width) solid var(--rz-secondary-light) !default;
$rz-border-secondary-lighter: var(--rz-border-width) solid var(--rz-secondary-lighter) !default;
$rz-border-secondary-dark: var(--rz-border-width) solid var(--rz-secondary-dark) !default;
$rz-border-secondary-darker: var(--rz-border-width) solid var(--rz-secondary-darker) !default;

$rz-border-info: var(--rz-border-width) solid var(--rz-info) !default;
$rz-border-info-light: var(--rz-border-width) solid var(--rz-info-light) !default;
$rz-border-info-lighter: var(--rz-border-width) solid var(--rz-info-lighter) !default;
$rz-border-info-dark: var(--rz-border-width) solid var(--rz-info-dark) !default;
$rz-border-info-darker: var(--rz-border-width) solid var(--rz-info-darker) !default;

$rz-border-success: var(--rz-border-width) solid var(--rz-success) !default;
$rz-border-success-light: var(--rz-border-width) solid var(--rz-success-light) !default;
$rz-border-success-lighter: var(--rz-border-width) solid var(--rz-success-lighter) !default;
$rz-border-success-dark: var(--rz-border-width) solid var(--rz-success-dark) !default;
$rz-border-success-darker: var(--rz-border-width) solid var(--rz-success-darker) !default;

$rz-border-warning: var(--rz-border-width) solid var(--rz-warning) !default;
$rz-border-warning-light: var(--rz-border-width) solid var(--rz-warning-light) !default;
$rz-border-warning-lighter: var(--rz-border-width) solid var(--rz-warning-lighter) !default;
$rz-border-warning-dark: var(--rz-border-width) solid var(--rz-warning-dark) !default;
$rz-border-warning-darker: var(--rz-border-width) solid var(--rz-warning-darker) !default;

$rz-border-danger: var(--rz-border-width) solid var(--rz-danger) !default;
$rz-border-danger-light: var(--rz-border-width) solid var(--rz-danger-light) !default;
$rz-border-danger-lighter: var(--rz-border-width) solid var(--rz-danger-lighter) !default;
$rz-border-danger-dark: var(--rz-border-width) solid var(--rz-danger-dark) !default;
$rz-border-danger-darker: var(--rz-border-width) solid var(--rz-danger-darker) !default;

$rz-border-series-1: var(--rz-border-width) solid var(--rz-series-1) !default;
$rz-border-series-2: var(--rz-border-width) solid var(--rz-series-2) !default;
$rz-border-series-3: var(--rz-border-width) solid var(--rz-series-3) !default;
$rz-border-series-4: var(--rz-border-width) solid var(--rz-series-4) !default;
$rz-border-series-5: var(--rz-border-width) solid var(--rz-series-5) !default;
$rz-border-series-6: var(--rz-border-width) solid var(--rz-series-6) !default;
$rz-border-series-7: var(--rz-border-width) solid var(--rz-series-7) !default;
$rz-border-series-8: var(--rz-border-width) solid var(--rz-series-8) !default;

$rz-border-normal: var(--rz-border-width) solid var(--rz-base-300) !default;
$rz-border-hover: var(--rz-border-width) solid var(--rz-base-400) !default;
$rz-border-focus: var(--rz-border-width) solid var(--rz-base-400) !default;
$rz-border-disabled: var(--rz-border-width) solid var(--rz-base-200) !default;

// Border CSS variables
:root {
  --rz-border-50: #{$rz-border-50};
  --rz-border-100: #{$rz-border-100};
  --rz-border-200: #{$rz-border-200};
  --rz-border-300: #{$rz-border-300};
  --rz-border-400: #{$rz-border-400};
  --rz-border-500: #{$rz-border-500};
  --rz-border-600: #{$rz-border-600};
  --rz-border-700: #{$rz-border-700};
  --rz-border-800: #{$rz-border-800};
  --rz-border-900: #{$rz-border-900};

  --rz-border-white: #{$rz-border-white};
  --rz-border-black: #{$rz-border-black};

  --rz-border-primary: #{$rz-border-primary};
  --rz-border-primary-light: #{$rz-border-primary-light};
  --rz-border-primary-lighter: #{$rz-border-primary-lighter};
  --rz-border-primary-dark: #{$rz-border-primary-dark};

  --rz-border-secondary: #{$rz-border-secondary};
  --rz-border-secondary-light: #{$rz-border-secondary-light};
  --rz-border-secondary-lighter: #{$rz-border-secondary-lighter};
  --rz-border-secondary-dark: #{$rz-border-secondary-dark};

  --rz-border-info: #{$rz-border-info};
  --rz-border-info-light: #{$rz-border-info-light};
  --rz-border-info-lighter: #{$rz-border-info-lighter};
  --rz-border-info-dark: #{$rz-border-info-dark};

  --rz-border-success: #{$rz-border-success};
  --rz-border-success-light: #{$rz-border-success-light};
  --rz-border-success-lighter: #{$rz-border-success-lighter};
  --rz-border-success-dark: #{$rz-border-success-dark};

  --rz-border-warning: #{$rz-border-warning};
  --rz-border-warning-light: #{$rz-border-warning-light};
  --rz-border-warning-lighter: #{$rz-border-warning-lighter};
  --rz-border-warning-dark: #{$rz-border-warning-dark};

  --rz-border-danger: #{$rz-border-danger};
  --rz-border-danger-light: #{$rz-border-danger-light};
  --rz-border-danger-lighter: #{$rz-border-danger-lighter};
  --rz-border-danger-dark: #{$rz-border-danger-dark};

  --rz-border-series-1: #{$rz-border-series-1};
  --rz-border-series-2: #{$rz-border-series-2};
  --rz-border-series-3: #{$rz-border-series-3};
  --rz-border-series-4: #{$rz-border-series-4};
  --rz-border-series-5: #{$rz-border-series-5};
  --rz-border-series-6: #{$rz-border-series-6};
  --rz-border-series-7: #{$rz-border-series-7};
  --rz-border-series-8: #{$rz-border-series-8};

  --rz-border-normal: #{$rz-border-normal};
  --rz-border-hover: #{$rz-border-hover};
  --rz-border-focus: #{$rz-border-focus};
  --rz-border-disabled: #{$rz-border-disabled};
}

// Border Radius

$rz-border-radius-2: $rz-border-radius * 2 !default;
$rz-border-radius-3: $rz-border-radius * 3 !default;
$rz-border-radius-4: $rz-border-radius * 4 !default;
$rz-border-radius-5: $rz-border-radius * 5 !default;

$rz-border-radius-map: () !default;
$rz-border-radius-map: map-merge(
  (
    "border-radius": $rz-border-radius,
    "border-radius-2": $rz-border-radius-2,
    "border-radius-3": $rz-border-radius-3,
    "border-radius-4": $rz-border-radius-4,
    "border-radius-5": $rz-border-radius-5,
  ),
  $rz-border-radius-map
);

// Border Radius CSS variables
:root {
  @each $token, $value in $rz-border-radius-map {
    --rz-#{$token}: #{$value};
  }
}

// Border Radius CSS classes
@each $token, $value in $rz-border-radius-map {
  .rz-#{$token} {
    border-radius: #{$value} !important;
  }
}

// Shadow

$rz-shadow-0: none !default;
$rz-shadow-1: 0 8px 10px 0 rgba(0, 0, 0, 0.1) !default;
$rz-shadow-2: 0 6px 14px 0 rgba(0, 0, 0, 0.2) !default;
$rz-shadow-3: none !default;
$rz-shadow-4: none !default;
$rz-shadow-5: none !default;
$rz-shadow-6: none !default;
$rz-shadow-7: none !default;
$rz-shadow-8: none !default;
$rz-shadow-9: none !default;
$rz-shadow-10: none !default;

$rz-shadow-map: () !default;
$rz-shadow-map: map-merge(
  (
    "shadow-0": $rz-shadow-0,
    "shadow-1": $rz-shadow-1,
    "shadow-2": $rz-shadow-2,
    "shadow-3": $rz-shadow-3,
    "shadow-4": $rz-shadow-4,
    "shadow-5": $rz-shadow-5,
    "shadow-6": $rz-shadow-6,
    "shadow-7": $rz-shadow-7,
    "shadow-8": $rz-shadow-8,
    "shadow-9": $rz-shadow-9,
    "shadow-10": $rz-shadow-10,
  ),
  $rz-shadow-map
);

// Shadow CSS variables
:root {
  @each $token, $value in $rz-shadow-map {
    --rz-#{$token}: #{$value};
  }
}

// Shadow CSS classes
@each $token, $value in $rz-shadow-map {
  .rz-#{$token} {
    box-shadow: #{$value} !important;
  }
}

// Transition

$rz-transition: 0.1s linear !default;
$rz-transition-all: all 0.1s linear !default;

// Transition CSS variables

:root {
  --rz-transition: #{$rz-transition};
  --rz-transition-all: #{$rz-transition-all};
}

//---- CSS classes

// Color
// Example .rz-color-primary
@each $color, $value in $rz-theme-colors-map {
  .rz-color-#{$color} {
    color: var(--rz-#{$color}) !important;
  }
}

// Background Color
// Example .rz-primary-bg-color
@each $color, $value in $rz-theme-colors-map {
  .rz-background-color-#{$color} {
    background-color: var(--rz-#{$color}) !important;
  }
}

// Border Color
// Example .rz-primary-border-color
@each $color, $value in $rz-theme-colors-map {
  .rz-border-color-#{$color} {
    border-color:  var(--rz-#{$color}) !important;
  }
}

// Border
// Example .rz-primary-border
@each $color, $value in $rz-theme-colors-map {
  .rz-border-#{$color} {
    border-width: var(--rz-border-width);
    border-style: solid;
    border-color:  var(--rz-#{$color}) !important;
  }
}