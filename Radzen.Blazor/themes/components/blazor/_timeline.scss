$rz-timeline-item-gap: 0 !default;
$rz-timeline-item-padding: 0.5rem !default;
$rz-timeline-axis-size: 4rem !default;
$rz-timeline-stop-size: 1rem !default;
$rz-timeline-stop-border: 3px solid var(--rz-base-background-color) !default;
$rz-timeline-stop-border-radius: calc(var(--rz-border-radius) * 12) !default;
$rz-timeline-stop-background-color: var(--rz-base-300) !default;
$rz-timeline-stop-color: var(--rz-base-700) !default;
$rz-timeline-line-color: var(--rz-base-300) !default;
$rz-timeline-line-width: 0.125rem !default;

// Timeline CSS variables

:root {
  --rz-timeline-item-gap: #{$rz-timeline-item-gap};
  --rz-timeline-item-padding: #{$rz-timeline-item-padding};
  --rz-timeline-axis-size: #{$rz-timeline-axis-size};
  --rz-timeline-stop-size: #{$rz-timeline-stop-size};
  --rz-timeline-stop-border: #{$rz-timeline-stop-border};
  --rz-timeline-stop-border-radius: #{$rz-timeline-stop-border-radius};
  --rz-timeline-stop-background-color: #{$rz-timeline-stop-background-color};
  --rz-timeline-stop-color: #{$rz-timeline-stop-color};
  --rz-timeline-line-color: #{$rz-timeline-line-color};
  --rz-timeline-line-width: #{$rz-timeline-line-width};
}

$timeline-stop-sizes: () !default;
$timeline-stop-sizes: map-merge(
  (
    lg: (
      size: calc(var(--rz-timeline-stop-size) * 3),
      font-size: 2rem
    ),
    md: (
      size: calc(var(--rz-timeline-stop-size) * 2),
      font-size: 1.5rem
    ),
    sm: (
      size: calc(var(--rz-timeline-stop-size) * 1.25),
      font-size: 1rem
    ),
    xs: (
      size: var(--rz-timeline-stop-size),
      font-size: 0.5rem
    )
  ),
  $timeline-stop-sizes
);

.rz-timeline-item {
  gap: var(--rz-timeline-item-gap);;
  padding: var(--rz-timeline-item-padding);
  position: relative;

  &:before {
    content: '';
    position: absolute;
    background-color: var(--rz-timeline-line-color);
  }

  .rz-flex-column &:before {
    top: 0;
    bottom: 0;
    left: calc(50% - (var(--rz-timeline-line-width) / 2));
    right: auto;
    width: var(--rz-timeline-line-width);
  }

  .rz-flex-column &:last-child:before {
    bottom: calc(50% - (var(--rz-timeline-line-width) / 2));
    border-bottom-left-radius: var(--rz-timeline-line-width);
    border-bottom-right-radius: var(--rz-timeline-line-width);
  }

  .rz-flex-column &:first-child:before {
    top: calc(50% - (var(--rz-timeline-line-width) / 2));
    border-top-left-radius: var(--rz-timeline-line-width);
    border-top-right-radius: var(--rz-timeline-line-width);
  }

  .rz-flex-row &:before {
    top: calc(50% - (var(--rz-timeline-line-width) / 2));
    bottom: auto;
    left: 0;
    right: 0;
    height: var(--rz-timeline-line-width);
  }

  .rz-flex-row &:last-child:before {
    right: 50%;
  }

  .rz-flex-row &:first-child:before {
    left: 50%;
  }

  .rz-timeline-content-start,
  .rz-timeline-content-end {
    flex: 1;
  }

}

.rz-timeline-axis {
  position: relative;
  flex: 0 1 var(--rz-timeline-axis-size);

  .rz-flex-row > & {
    width: var(--rz-timeline-axis-size);
  }

  .rz-flex-column > & {
    height: var(--rz-timeline-axis-size);
  }
}

.rz-timeline-stop {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: var(--rz-timeline-stop-size);
  width: var(--rz-timeline-stop-size);
  border: var(--rz-timeline-stop-border);
  border-radius: var(--rz-timeline-stop-border-radius);
  background-color: var(--rz-timeline-stop-background-color);
  color: var(--rz-timeline-stop-color);
}

.rz-timeline-stop-outlined {
  background-color: var(--rz-base-background-color);
  color: var(--rz-timeline-stop-color);
  border-color: var(--rz-timeline-stop-background-color);
}

.rz-timeline-stop-flat {
  border: 0;
}

.rz-timeline-stop-text {
  background-color: var(--rz-base-background-color);
  color: var(--rz-timeline-stop-color);
  border: 0;
}

@each $style, $rule in $severity-styles-map {
  .rz-timeline-stop-#{$style} {
    background-color: map-get($rule, background-color);
    color: map-get($rule, color);
  }

  .rz-timeline-stop-outlined.rz-timeline-stop-#{$style} {
    background-color: var(--rz-base-background-color);
    color: map-get($rule, background-color);
    border-color: map-get($rule, background-color);
  }
  .rz-timeline-stop-text.rz-timeline-stop-#{$style} {
    background-color: var(--rz-base-background-color);
    color: map-get($rule, background-color);
  }
}

@each $size, $timeline-stop in $timeline-stop-sizes {
  .rz-timeline-stop-#{$size} {
    width: map-get($timeline-stop, size);
    height: map-get($timeline-stop, size);
    flex: 0 1 map-get($timeline-stop, size);

    .rzi {
      font-size: map-get($timeline-stop, font-size);
    }
  }
}

